<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'>
<nta>
	<declaration>// 由于int类型范围限定在[-32768, 32767]，所以使用10us作为单位

// Place global declarations here.
const int N = 7;
const int minInterval_0 = 50; //串口通讯中断最短间隔
const int minInterval_1 = 50; //双发通讯中断最短间隔
const int minInterval_2 = 60; //机电通讯中断最短间隔
const int AD_start = 120; //小周期运行了1200us，第一个AD可以触发

// Also representing the priorities with 0 the highest and 9 the lowest
typedef int[0, N-1] intr_id; 
//    0 SIO0
//    1 双发通讯
//    2 AD        分割为两部分，第二部分的优先级为10，可被任意中断打断
//    3 Timer1, 小闭环    从该中断开始，每个中断都能被自身打断
//    4 Timer2，大闭环
//    5 DMA结束
//    6 DMA应答

chan intr[intr_id];
urgent broadcast chan prompt, resume;

// 中断必须执行结束的时间
const int D[intr_id] = {minInterval_0, minInterval_1, 500, 500, 2500, 2500, 2500}; 
const int E[intr_id] = {1, // 6us 
                         1, // 11us  
                         2, // 19us
                        125,
                        1011,
                        6, // 59us
                        8  // 77us
                        }; // 中断执行所需时间
const int cTime = 2; // AD无中断特权部分执行的时间, 16us

bool IRR[intr_id] = {false, false,false,false,false,false,false};
bool ISR[intr_id] = {false, false,false,false,false,false,false};

int ICG[intr_id] = {50, 2, 5, 5, 1, 1, 1}; //串口中断实际有50个
int fix_count[intr_id] = {0, 0, 0, 0, 0, 0, 0};
int fix_count_non;

intr_id stack[N+1]; // 中断栈
typedef int[0,N] SP;
SP sp = 0; // 栈顶指针

clock intTime[intr_id];
clock timeSinceStart[intr_id];
clock universe;

bool already[intr_id] = {false, false, false, false, false, false, false};

// bool AD_NON = false;

typedef int[0,N] Pri;
Pri get_highest_pri(){
    meta int i;
    for(i = 0; i &lt; N; i++){
        if(ISR[i] || IRR[i]){
            return i;
        } 
    }
    return N;
}

int get_highest_irr(){
    meta int j;
    for(j = 0; j &lt; N; j++){
        if(IRR[j]){
            return j;
        } 
    }
    return N;
}

int get_highest_isr(){
    meta int k;
    for(k = 0; k &lt; N; k++){
        if(ISR[k]){
            return k;
        } 
    }
    return N;
}

int fix_time(){
    meta int i;
    int t = 0;
    for(i = 0; i &lt; N; i++){
        t = t + fix_count[i] * E[i];
    }
    t = t + fix_count_non * cTime;
    return t;
}</declaration>
	<template>
		<name x="5" y="5">Interrupt</name>
		<parameter>int id</parameter>
		<location id="id0" x="-204" y="-161">
			<name x="-187" y="-204">Auxiliary1</name>
			<label kind="invariant" x="-187" y="-246">ISR[id] == true &amp;&amp;
IRR[id] == false</label>
			<committed/>
		</location>
		<location id="id1" x="-204" y="-475">
			<name x="-214" y="-509">Wait</name>
			<label kind="invariant" x="-221" y="-569">intTime[id]' == 0 &amp;&amp;
ISR[id] == false &amp;&amp;
IRR[id] == true</label>
		</location>
		<location id="id2" x="17" y="-475">
			<name x="-9" y="-509">Acknowledge</name>
			<label kind="invariant" x="-17" y="-552">ISR[id] == false &amp;&amp;
IRR[id] == true</label>
			<committed/>
		</location>
		<location id="id3" x="238" y="43">
			<name x="255" y="34">Error</name>
			<committed/>
		</location>
		<location id="id4" x="238" y="-161">
			<name x="187" y="-144">Auxiliary2</name>
			<label kind="invariant" x="161" y="-127">ISR[id] == false &amp;&amp;
IRR[id] == false</label>
			<committed/>
		</location>
		<location id="id5" x="-25" y="43">
			<name x="-8" y="17">Suspend</name>
			<label kind="invariant" x="-8" y="-42">intTime[id]' == 0 &amp;&amp;
ISR[id] == true &amp;&amp;
IRR[id] == false</label>
		</location>
		<location id="id6" x="-25" y="-161">
			<name x="-8" y="-186">On</name>
			<label kind="invariant" x="1" y="-161">intTime[id] &lt;= E[id] &amp;&amp;
ISR[id] == true &amp;&amp;
IRR[id] == false</label>
		</location>
		<location id="id7" x="238" y="-475">
			<name x="255" y="-484">Off</name>
			<label kind="invariant" x="136" y="-569">intTime[id]' == 0 &amp;&amp;
timeSinceStart[id]' == 0 &amp;&amp;
ISR[id] == false &amp;&amp;
IRR[id] == false</label>
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id0"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-76" y="-195">prompt!</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id3"/>
			<label kind="guard" x="-127" y="86">timeSinceStart[id] &gt; D[id] + fix_time()</label>
			<nail x="-238" y="-475"/>
			<nail x="-238" y="111"/>
			<nail x="238" y="111"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-170" y="-467">get_highest_pri() &lt; id</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-195" y="-382">get_highest_pri() == id</label>
			<label kind="synchronisation" x="-195" y="-271">resume?</label>
			<label kind="assignment" x="-195" y="-356">ISR[id] = true,
IRR[id] = false,
stack[sp+1] = id,
sp++</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id0"/>
			<label kind="guard" x="25" y="-373">get_highest_pri() == id</label>
			<label kind="assignment" x="25" y="-348">ISR[id] = true,
IRR[id] = false,
stack[sp+1] = id,
sp++</label>
			<nail x="17" y="-221"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="85" y="-501">intr[id]?</label>
			<label kind="assignment" x="68" y="-476">IRR[id] = true,
timeSinceStart[id] = 0,
intTime[id] = 0,
already[id] = true</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id3"/>
			<label kind="guard" x="-8" y="52">timeSinceStart[id] &gt; D[id] + fix_time()</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id3"/>
			<label kind="guard" x="17" y="-85">timeSinceStart[id] &gt; D[id] + fix_time()</label>
			<nail x="0" y="-59"/>
			<nail x="238" y="-59"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="178" y="-306">resume!</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id4"/>
			<label kind="guard" x="85" y="-186">intTime[id] &gt;= E[id]</label>
			<label kind="assignment" x="85" y="-229">ISR[id] = false,
sp--</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-85" y="-68">prompt?</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="guard" x="-204" y="-16">stack[sp] == id &amp;&amp; 
get_highest_irr() &gt; id</label>
			<label kind="synchronisation" x="-204" y="-85">resume?</label>
			<label kind="assignment" x="-204" y="-50">fix_count[id]++</label>
			<nail x="-212" y="43"/>
			<nail x="-212" y="-110"/>
		</transition>
	</template>
	<template>
		<name>AD</name>
		<parameter>int id</parameter>
		<declaration>int count; // 最多执行6次
const int c = 6;
</declaration>
		<location id="id8" x="-263" y="-493">
			<name x="-348" y="-501">Auxiliary1</name>
			<label kind="invariant" x="-382" y="-544">IRR[id] == false &amp;&amp;
ISR[id] == true</label>
			<committed/>
		</location>
		<location id="id9" x="187" y="-102">
			<name x="221" y="-119">Suspend_2</name>
			<label kind="invariant" x="187" y="-85">IRR[id] == false &amp;&amp;
ISR[id] == false &amp;&amp;
intTime[id]' == 0</label>
		</location>
		<location id="id10" x="187" y="-425">
			<name x="127" y="-459">Non_intr</name>
			<label kind="invariant" x="51" y="-527">IRR[id] == false &amp;&amp;
ISR[id] == false &amp;&amp;
intTime[id] &lt;= cTime</label>
		</location>
		<location id="id11" x="-68" y="-663">
			<name x="-102" y="-697">Acknowledge</name>
			<label kind="invariant" x="-110" y="-739">IRR[id] == true &amp;&amp;
ISR[id] == false</label>
			<committed/>
		</location>
		<location id="id12" x="17" y="-102">
			<name x="43" y="-102">Error</name>
			<committed/>
		</location>
		<location id="id13" x="-153" y="-102">
			<name x="-229" y="-102">Suspend</name>
			<label kind="invariant" x="-264" y="-86">IRR[id] == false &amp;&amp;
ISR[id] == true &amp;&amp;
intTime[id]' == 0</label>
		</location>
		<location id="id14" x="-263" y="-425">
			<name x="-306" y="-433">On</name>
			<label kind="invariant" x="-382" y="-399">IRR[id] == false &amp;&amp;
ISR[id] == true &amp;&amp;
intTime[id] &lt;= E[id]</label>
		</location>
		<location id="id15" x="187" y="-663">
			<name x="221" y="-671">Off</name>
			<label kind="invariant" x="136" y="-756">IRR[id] == false &amp;&amp;
ISR[id] == false &amp;&amp;
intTime[id]' == 0 &amp;&amp; 
timeSinceStart[id]' == 0</label>
		</location>
		<location id="id16" x="-263" y="-663">
			<name x="-273" y="-697">Wait</name>
			<label kind="invariant" x="-331" y="-756">IRR[id] == true &amp;&amp;
ISR[id] == false &amp;&amp;
intTime[id]' == 0</label>
		</location>
		<location id="id17" x="187" y="-552">
			<name x="204" y="-586">Auxiliary2</name>
			<label kind="invariant" x="204" y="-569">IRR[id] == false &amp;&amp;
ISR[id] == false</label>
			<committed/>
		</location>
		<init ref="id15"/>
		<transition>
			<source ref="id16"/>
			<target ref="id12"/>
			<label kind="guard" x="-382" y="-102">timeSinceStart[id] &gt; 
D[id] + fix_time()</label>
			<nail x="-391" y="-663"/>
			<nail x="-391" y="-25"/>
			<nail x="17" y="-25"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-323" y="-476">prompt!</label>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="127" y="-586">resume!</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id17"/>
			<label kind="guard" x="204" y="-527">count &gt;= c &amp;&amp;
intTime[id] &gt;= cTime</label>
			<label kind="assignment" x="204" y="-493">sp--,
count = 0,
intTime[id] = 0</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id12"/>
			<label kind="guard" x="42" y="-76">timeSinceStart[id] &gt; 
D[id] + fix_time()</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id12"/>
			<label kind="guard" x="42" y="-289">timeSinceStart[id] &gt; 
D[id] + fix_time()</label>
			<nail x="170" y="-297"/>
			<nail x="17" y="-297"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id14"/>
			<label kind="guard" x="-76" y="-476">count &lt; c &amp;&amp;
intTime[id] &gt;= cTime</label>
			<label kind="assignment" x="-187" y="-493">count++,
ISR[id] = true,
intTime[id] = 0</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="guard" x="59" y="-204">stack[sp] == id &amp;&amp; 
get_highest_irr() &gt;= 
get_highest_isr()</label>
			<label kind="synchronisation" x="127" y="-238">resume?</label>
			<label kind="assignment" x="76" y="-221">fix_count_non++</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="212" y="-221">prompt?</label>
			<nail x="280" y="-187"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id8"/>
			<label kind="guard" x="-59" y="-612">get_highest_pri() == id</label>
			<label kind="assignment" x="-59" y="-586">ISR[id] = true,
IRR[id] = false,
stack[sp+1] = id,
sp++</label>
			<nail x="-68" y="-493"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="42" y="-663">intr[id]?</label>
			<label kind="assignment" x="8" y="-748">IRR[id] = true,
already[id] = true,
already[3] = false,
count = 1</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id12"/>
			<label kind="guard" x="-136" y="-93">timeSinceStart[id] &gt; 
D[id] + fix_time()</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id12"/>
			<label kind="guard" x="-153" y="-289">timeSinceStart[id] &gt; 
D[id] + fix_time()</label>
			<nail x="-170" y="-297"/>
			<nail x="-25" y="-297"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id10"/>
			<label kind="guard" x="-102" y="-357">intTime[id] &gt;= E[id]</label>
			<label kind="assignment" x="-85" y="-408">ISR[id] = false,
intTime[id] = 0</label>
			<nail x="-144" y="-365"/>
			<nail x="68" y="-365"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-212" y="-255">prompt?</label>
			<nail x="-221" y="-229"/>
			<nail x="-153" y="-229"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id14"/>
			<label kind="guard" x="-144" y="-161">stack[sp] == id &amp;&amp; 
get_highest_irr() &gt; id</label>
			<label kind="synchronisation" x="-255" y="-144">resume?</label>
			<label kind="assignment" x="-255" y="-178">fix_count[id]++</label>
			<nail x="-263" y="-102"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id16"/>
			<label kind="guard" x="-238" y="-654">get_highest_pri() &lt; id</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id8"/>
			<label kind="guard" x="-255" y="-612">get_highest_pri() == id</label>
			<label kind="synchronisation" x="-340" y="-612">resume?</label>
			<label kind="assignment" x="-255" y="-586">ISR[id] = true,
IRR[id] = false,
stack[sp+1] = id,
sp++</label>
		</transition>
	</template>
	<template>
		<name>env</name>
		<declaration>

</declaration>
		<location id="id18" x="-119" y="0">
			<name x="-93" y="-8">Nothing</name>
		</location>
		<init ref="id18"/>
		<transition>
			<source ref="id18"/>
			<target ref="id18"/>
			<label kind="guard" x="-93" y="-263">ICG[3] &gt; 0 &amp;&amp; 
(ISR[3] == false &amp;&amp; universe &gt; (5-ICG[3]) * D[3])</label>
			<label kind="synchronisation" x="102" y="-221">intr[3]!</label>
			<label kind="assignment" x="102" y="-195">ICG[3]--</label>
			<nail x="51" y="-221"/>
			<nail x="119" y="-153"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id18"/>
			<label kind="select" x="-102" y="153">i:int[0, 1]</label>
			<label kind="guard" x="-85" y="246">ICG[i] &gt; 0 &amp;&amp; (already[i] == false || timeSinceStart[i] &gt; D[i])</label>
			<label kind="synchronisation" x="-101" y="106">intr[i]!</label>
			<label kind="assignment" x="-25" y="221">ICG[i]--</label>
			<nail x="34" y="246"/>
			<nail x="127" y="153"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id18"/>
			<label kind="select" x="51" y="0">i:int[2, 6]</label>
			<label kind="guard" x="51" y="-102">ICG[i] &gt; 0&amp;&amp;                                          
(                           
(i == 2 &amp;&amp; already[3] == true  &amp;&amp; intTime[3] &gt; AD_start) || 
(i != 2 &amp;&amp; i != 3)
)</label>
			<label kind="synchronisation" x="51" y="25">intr[i]!</label>
			<label kind="assignment" x="51" y="51">ICG[i]--</label>
			<nail x="42" y="-59"/>
			<nail x="42" y="76"/>
		</transition>
	</template>
	<system>// Place template instantiations here.
intr0 = Interrupt(0);
intr1 = Interrupt(1);
intr2 = AD(2);
intr3 = Interrupt(3);
intr4 = Interrupt(4);
intr5 = Interrupt(5);
intr6 = Interrupt(6);
/*
*/
environment = env();

// List one or more processes to be composed into a system.

system intr0, intr1, intr2, intr3, intr4, intr5, intr6, environment; //    </system>
</nta>
