%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 45 20 550 771
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: Werewolflsp@59.66.93.70
%%Title: env_basic
%%CreationDate: 2015年4月27日 星期一 下午07时16分25秒 CST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
140 209 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
140.000 0.00000 l
140.000 209.000 l
0.00000 209.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
140.000 0.00000 l
140.000 209.000 l
0.00000 209.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
0.00000 0.00000 l
0.00000 0.00000 l
0.00000 0.00000 l
0.00000 0.00000 l
h
f
Q
[ 1.00000 0.00000 0.00000 1.00000 69.0000 171.000 ] concat
.258824 .627451 .658824 RG
newpath
-15.0625 -116.609 m
-15.0625 -118.016 l
-13.8438 -118.016 l
-13.8438 -116.609 l
-15.0625 -116.609 l
h
-15.0625 -108.000 m
-15.0625 -115.266 l
-13.8438 -115.266 l
-13.8438 -108.000 l
-15.0625 -108.000 l
h
-11.9678 -108.000 m
-11.9678 -115.266 l
-10.8584 -115.266 l
-10.8584 -114.234 l
-10.3271 -115.026 -9.55632 -115.422 -8.54590 -115.422  c
-8.10840 -115.422 -7.70736 -115.344 -7.34277 -115.188  c
-6.97819 -115.031 -6.70475 -114.826 -6.52246 -114.570  c
-6.34017 -114.315 -6.21257 -114.010 -6.13965 -113.656  c
-6.08757 -113.427 -6.06152 -113.031 -6.06152 -112.469  c
-6.06152 -108.000 l
-7.29590 -108.000 l
-7.29590 -112.422 l
-7.29590 -112.922 -7.34277 -113.294 -7.43652 -113.539  c
-7.53027 -113.784 -7.69954 -113.982 -7.94434 -114.133  c
-8.18913 -114.284 -8.47819 -114.359 -8.81152 -114.359  c
-9.33236 -114.359 -9.78288 -114.193 -10.1631 -113.859  c
-10.5433 -113.526 -10.7334 -112.896 -10.7334 -111.969  c
-10.7334 -108.000 l
-11.9678 -108.000 l
h
-1.49414 -109.094 m
-1.32227 -108.016 l
-1.66602 -107.943 -1.97331 -107.906 -2.24414 -107.906  c
-2.69206 -107.906 -3.03841 -107.977 -3.28320 -108.117  c
-3.52799 -108.258 -3.69987 -108.443 -3.79883 -108.672  c
-3.89779 -108.901 -3.94727 -109.385 -3.94727 -110.125  c
-3.94727 -114.297 l
-4.85352 -114.297 l
-4.85352 -115.266 l
-3.94727 -115.266 l
-3.94727 -117.062 l
-2.72852 -117.797 l
-2.72852 -115.266 l
-1.49414 -115.266 l
-1.49414 -114.297 l
-2.72852 -114.297 l
-2.72852 -110.062 l
-2.72852 -109.708 -2.70768 -109.482 -2.66602 -109.383  c
-2.62435 -109.284 -2.55404 -109.203 -2.45508 -109.141  c
-2.35612 -109.078 -2.21810 -109.047 -2.04102 -109.047  c
-1.89518 -109.047 -1.71289 -109.062 -1.49414 -109.094  c
h
-.307617 -108.000 m
-.307617 -115.266 l
.801758 -115.266 l
.801758 -114.156 l
1.08301 -114.677 1.34342 -115.018 1.58301 -115.180  c
1.82259 -115.341 2.08822 -115.422 2.37988 -115.422  c
2.79655 -115.422 3.21842 -115.292 3.64551 -115.031  c
3.22363 -113.891 l
2.92155 -114.068 2.61947 -114.156 2.31738 -114.156  c
2.04655 -114.156 1.80436 -114.076 1.59082 -113.914  c
1.37728 -113.753 1.22363 -113.526 1.12988 -113.234  c
.994466 -112.797 .926758 -112.318 .926758 -111.797  c
.926758 -108.000 l
-.307617 -108.000 l
h
4.40137 -105.219 m
4.40137 -118.016 l
7.12012 -118.016 l
7.12012 -117.000 l
5.63574 -117.000 l
5.63574 -106.234 l
7.12012 -106.234 l
7.12012 -105.219 l
4.40137 -105.219 l
h
8.27539 -116.609 m
8.27539 -118.016 l
9.49414 -118.016 l
9.49414 -116.609 l
8.27539 -116.609 l
h
8.27539 -108.000 m
8.27539 -115.266 l
9.49414 -115.266 l
9.49414 -108.000 l
8.27539 -108.000 l
h
13.4326 -105.219 m
10.7139 -105.219 l
10.7139 -106.234 l
12.1982 -106.234 l
12.1982 -117.000 l
10.7139 -117.000 l
10.7139 -118.016 l
13.4326 -118.016 l
13.4326 -105.219 l
h
15.9160 -110.484 m
15.5410 -115.797 l
15.5410 -118.016 l
17.0723 -118.016 l
17.0723 -115.797 l
16.7129 -110.484 l
15.9160 -110.484 l
h
15.6035 -108.000 m
15.6035 -109.406 l
17.0098 -109.406 l
17.0098 -108.000 l
15.6035 -108.000 l
h
f
.549020 .219608 .388235 RG
newpath
-23.9375 32.0000 m
-23.9375 21.9844 l
-22.5781 21.9844 l
-17.3125 29.8438 l
-17.3125 21.9844 l
-16.0312 21.9844 l
-16.0312 32.0000 l
-17.3906 32.0000 l
-22.6562 24.1250 l
-22.6562 32.0000 l
-23.9375 32.0000 l
h
-14.4209 28.3750 m
-14.4209 27.0312 -14.0459 26.0312 -13.2959 25.3750  c
-12.6813 24.8438 -11.9209 24.5781 -11.0146 24.5781  c
-10.0251 24.5781 -9.21257 24.9036 -8.57715 25.5547  c
-7.94173 26.2057 -7.62402 27.1094 -7.62402 28.2656  c
-7.62402 29.2031 -7.76465 29.9401 -8.04590 30.4766  c
-8.32715 31.0130 -8.73600 31.4297 -9.27246 31.7266  c
-9.80892 32.0234 -10.3896 32.1719 -11.0146 32.1719  c
-12.0355 32.1719 -12.8584 31.8438 -13.4834 31.1875  c
-14.1084 30.5312 -14.4209 29.5938 -14.4209 28.3750  c
h
-13.1553 28.3750 m
-13.1553 29.3021 -12.9521 29.9974 -12.5459 30.4609  c
-12.1396 30.9245 -11.6292 31.1562 -11.0146 31.1562  c
-10.4105 31.1562 -9.90527 30.9219 -9.49902 30.4531  c
-9.09277 29.9844 -8.88965 29.2760 -8.88965 28.3281  c
-8.88965 27.4323 -9.09277 26.7526 -9.49902 26.2891  c
-9.90527 25.8255 -10.4105 25.5938 -11.0146 25.5938  c
-11.6292 25.5938 -12.1396 25.8229 -12.5459 26.2812  c
-12.9521 26.7396 -13.1553 27.4375 -13.1553 28.3750  c
h
-3.49414 30.9062 m
-3.32227 31.9844 l
-3.66602 32.0573 -3.97331 32.0938 -4.24414 32.0938  c
-4.69206 32.0938 -5.03841 32.0234 -5.28320 31.8828  c
-5.52799 31.7422 -5.69987 31.5573 -5.79883 31.3281  c
-5.89779 31.0990 -5.94727 30.6146 -5.94727 29.8750  c
-5.94727 25.7031 l
-6.85352 25.7031 l
-6.85352 24.7344 l
-5.94727 24.7344 l
-5.94727 22.9375 l
-4.72852 22.2031 l
-4.72852 24.7344 l
-3.49414 24.7344 l
-3.49414 25.7031 l
-4.72852 25.7031 l
-4.72852 29.9375 l
-4.72852 30.2917 -4.70768 30.5182 -4.66602 30.6172  c
-4.62435 30.7161 -4.55404 30.7969 -4.45508 30.8594  c
-4.35612 30.9219 -4.21810 30.9531 -4.04102 30.9531  c
-3.89518 30.9531 -3.71289 30.9375 -3.49414 30.9062  c
h
-2.29199 32.0000 m
-2.29199 21.9844 l
-1.05762 21.9844 l
-1.05762 25.5781 l
-.484701 24.9115 .239258 24.5781 1.11426 24.5781  c
1.65592 24.5781 2.12467 24.6849 2.52051 24.8984  c
2.91634 25.1120 3.20020 25.4036 3.37207 25.7734  c
3.54395 26.1432 3.62988 26.6875 3.62988 27.4062  c
3.62988 32.0000 l
2.39551 32.0000 l
2.39551 27.4062 l
2.39551 26.7812 2.26270 26.3307 1.99707 26.0547  c
1.73145 25.7786 1.35384 25.6406 .864258 25.6406  c
.499674 25.6406 .155924 25.7344 -.166992 25.9219  c
-.489909 26.1094 -.719076 26.3646 -.854492 26.6875  c
-.989909 27.0104 -1.05762 27.4583 -1.05762 28.0312  c
-1.05762 32.0000 l
-2.29199 32.0000 l
h
5.50977 23.3906 m
5.50977 21.9844 l
6.72852 21.9844 l
6.72852 23.3906 l
5.50977 23.3906 l
h
5.50977 32.0000 m
5.50977 24.7344 l
6.72852 24.7344 l
6.72852 32.0000 l
5.50977 32.0000 l
h
8.60449 32.0000 m
8.60449 24.7344 l
9.71387 24.7344 l
9.71387 25.7656 l
10.2451 24.9740 11.0160 24.5781 12.0264 24.5781  c
12.4639 24.5781 12.8649 24.6562 13.2295 24.8125  c
13.5941 24.9688 13.8675 25.1745 14.0498 25.4297  c
14.2321 25.6849 14.3597 25.9896 14.4326 26.3438  c
14.4847 26.5729 14.5107 26.9688 14.5107 27.5312  c
14.5107 32.0000 l
13.2764 32.0000 l
13.2764 27.5781 l
13.2764 27.0781 13.2295 26.7057 13.1357 26.4609  c
13.0420 26.2161 12.8727 26.0182 12.6279 25.8672  c
12.3831 25.7161 12.0941 25.6406 11.7607 25.6406  c
11.2399 25.6406 10.7894 25.8073 10.4092 26.1406  c
10.0290 26.4740 9.83887 27.1042 9.83887 28.0312  c
9.83887 32.0000 l
8.60449 32.0000 l
h
16.1719 32.6094 m
17.3594 32.7812 l
17.4115 33.1458 17.5521 33.4167 17.7812 33.5938  c
18.0833 33.8125 18.5000 33.9219 19.0312 33.9219  c
19.6042 33.9219 20.0443 33.8099 20.3516 33.5859  c
20.6589 33.3620 20.8698 33.0417 20.9844 32.6250  c
21.0469 32.3750 21.0729 31.8490 21.0625 31.0469  c
20.5312 31.6823 19.8646 32.0000 19.0625 32.0000  c
18.0625 32.0000 17.2891 31.6406 16.7422 30.9219  c
16.1953 30.2031 15.9219 29.3385 15.9219 28.3281  c
15.9219 27.6406 16.0469 27.0026 16.2969 26.4141  c
16.5469 25.8255 16.9089 25.3724 17.3828 25.0547  c
17.8568 24.7370 18.4167 24.5781 19.0625 24.5781  c
19.9167 24.5781 20.6250 24.9219 21.1875 25.6094  c
21.1875 24.7344 l
22.3125 24.7344 l
22.3125 31.0156 l
22.3125 32.1510 22.1979 32.9531 21.9688 33.4219  c
21.7396 33.8906 21.3750 34.2630 20.8750 34.5391  c
20.3750 34.8151 19.7604 34.9531 19.0312 34.9531  c
18.1667 34.9531 17.4688 34.7578 16.9375 34.3672  c
16.4062 33.9766 16.1510 33.3906 16.1719 32.6094  c
h
17.1875 28.2344 m
17.1875 29.1927 17.3750 29.8906 17.7500 30.3281  c
18.1250 30.7656 18.5990 30.9844 19.1719 30.9844  c
19.7344 30.9844 20.2083 30.7656 20.5938 30.3281  c
20.9792 29.8906 21.1719 29.2083 21.1719 28.2812  c
21.1719 27.3958 20.9740 26.7266 20.5781 26.2734  c
20.1823 25.8203 19.7083 25.5938 19.1562 25.5938  c
18.6042 25.5938 18.1380 25.8151 17.7578 26.2578  c
17.3776 26.7005 17.1875 27.3594 17.1875 28.2344  c
h
f
.639216 .658824 .258824 RG
newpath
-33.0625 -163.609 m
-33.0625 -165.016 l
-31.8438 -165.016 l
-31.8438 -163.609 l
-33.0625 -163.609 l
h
-33.0625 -155.000 m
-33.0625 -162.266 l
-31.8438 -162.266 l
-31.8438 -155.000 l
-33.0625 -155.000 l
h
-29.6240 -160.859 m
-29.6240 -162.266 l
-28.2178 -162.266 l
-28.2178 -160.859 l
-29.6240 -160.859 l
h
-29.6240 -155.000 m
-29.6240 -156.406 l
-28.2178 -156.406 l
-28.2178 -155.000 l
-29.6240 -155.000 l
h
-26.0625 -163.609 m
-26.0625 -165.016 l
-24.8438 -165.016 l
-24.8438 -163.609 l
-26.0625 -163.609 l
h
-26.0625 -155.000 m
-26.0625 -162.266 l
-24.8438 -162.266 l
-24.8438 -155.000 l
-26.0625 -155.000 l
h
-22.9678 -155.000 m
-22.9678 -162.266 l
-21.8584 -162.266 l
-21.8584 -161.234 l
-21.3271 -162.026 -20.5563 -162.422 -19.5459 -162.422  c
-19.1084 -162.422 -18.7074 -162.344 -18.3428 -162.188  c
-17.9782 -162.031 -17.7048 -161.826 -17.5225 -161.570  c
-17.3402 -161.315 -17.2126 -161.010 -17.1396 -160.656  c
-17.0876 -160.427 -17.0615 -160.031 -17.0615 -159.469  c
-17.0615 -155.000 l
-18.2959 -155.000 l
-18.2959 -159.422 l
-18.2959 -159.922 -18.3428 -160.294 -18.4365 -160.539  c
-18.5303 -160.784 -18.6995 -160.982 -18.9443 -161.133  c
-19.1891 -161.284 -19.4782 -161.359 -19.8115 -161.359  c
-20.3324 -161.359 -20.7829 -161.193 -21.1631 -160.859  c
-21.5433 -160.526 -21.7334 -159.896 -21.7334 -158.969  c
-21.7334 -155.000 l
-22.9678 -155.000 l
h
-12.4941 -156.094 m
-12.3223 -155.016 l
-12.6660 -154.943 -12.9733 -154.906 -13.2441 -154.906  c
-13.6921 -154.906 -14.0384 -154.977 -14.2832 -155.117  c
-14.5280 -155.258 -14.6999 -155.443 -14.7988 -155.672  c
-14.8978 -155.901 -14.9473 -156.385 -14.9473 -157.125  c
-14.9473 -161.297 l
-15.8535 -161.297 l
-15.8535 -162.266 l
-14.9473 -162.266 l
-14.9473 -164.062 l
-13.7285 -164.797 l
-13.7285 -162.266 l
-12.4941 -162.266 l
-12.4941 -161.297 l
-13.7285 -161.297 l
-13.7285 -157.062 l
-13.7285 -156.708 -13.7077 -156.482 -13.6660 -156.383  c
-13.6243 -156.284 -13.5540 -156.203 -13.4551 -156.141  c
-13.3561 -156.078 -13.2181 -156.047 -13.0410 -156.047  c
-12.8952 -156.047 -12.7129 -156.062 -12.4941 -156.094  c
h
-11.2607 -152.219 m
-11.2607 -165.016 l
-8.54199 -165.016 l
-8.54199 -164.000 l
-10.0264 -164.000 l
-10.0264 -153.234 l
-8.54199 -153.234 l
-8.54199 -152.219 l
-11.2607 -152.219 l
h
-7.74609 -159.938 m
-7.74609 -161.125 -7.62370 -162.081 -7.37891 -162.805  c
-7.13411 -163.529 -6.77214 -164.086 -6.29297 -164.477  c
-5.81380 -164.867 -5.20964 -165.062 -4.48047 -165.062  c
-3.93880 -165.062 -3.46484 -164.953 -3.05859 -164.734  c
-2.65234 -164.516 -2.31641 -164.203 -2.05078 -163.797  c
-1.78516 -163.391 -1.57943 -162.896 -1.43359 -162.312  c
-1.28776 -161.729 -1.21484 -160.938 -1.21484 -159.938  c
-1.21484 -158.760 -1.33464 -157.812 -1.57422 -157.094  c
-1.81380 -156.375 -2.17318 -155.818 -2.65234 -155.422  c
-3.13151 -155.026 -3.74089 -154.828 -4.48047 -154.828  c
-5.43880 -154.828 -6.19401 -155.177 -6.74609 -155.875  c
-7.41276 -156.708 -7.74609 -158.062 -7.74609 -159.938  c
h
-6.48047 -159.938 m
-6.48047 -158.292 -6.28776 -157.198 -5.90234 -156.656  c
-5.51693 -156.115 -5.04297 -155.844 -4.48047 -155.844  c
-3.90755 -155.844 -3.42839 -156.117 -3.04297 -156.664  c
-2.65755 -157.211 -2.46484 -158.302 -2.46484 -159.938  c
-2.46484 -161.594 -2.65755 -162.693 -3.04297 -163.234  c
-3.42839 -163.776 -3.91276 -164.047 -4.49609 -164.047  c
-5.05859 -164.047 -5.50651 -163.807 -5.83984 -163.328  c
-6.26693 -162.714 -6.48047 -161.583 -6.48047 -159.938  c
h
.711914 -155.000 m
.711914 -156.406 l
2.10254 -156.406 l
2.10254 -155.000 l
2.10254 -154.490 2.01139 -154.076 1.82910 -153.758  c
1.64681 -153.440 1.35775 -153.193 .961914 -153.016  c
.618164 -153.547 l
.878581 -153.661 1.07129 -153.828 1.19629 -154.047  c
1.32129 -154.266 1.38900 -154.583 1.39941 -155.000  c
.711914 -155.000 l
h
8.30371 -155.000 m
8.30371 -165.016 l
9.66309 -165.016 l
14.9287 -157.156 l
14.9287 -165.016 l
16.2100 -165.016 l
16.2100 -155.000 l
14.8506 -155.000 l
9.58496 -162.875 l
9.58496 -155.000 l
8.30371 -155.000 l
h
17.7891 -158.016 m
17.7891 -159.250 l
21.5703 -159.250 l
21.5703 -158.016 l
17.7891 -158.016 l
h
27.2324 -155.000 m
25.9980 -155.000 l
25.9980 -162.844 l
25.7064 -162.562 25.3184 -162.279 24.8340 -161.992  c
24.3496 -161.706 23.9199 -161.495 23.5449 -161.359  c
23.5449 -162.547 l
24.2324 -162.870 24.8340 -163.260 25.3496 -163.719  c
25.8652 -164.177 26.2272 -164.625 26.4355 -165.062  c
27.2324 -165.062 l
27.2324 -155.000 l
h
32.7842 -152.219 m
30.0654 -152.219 l
30.0654 -153.234 l
31.5498 -153.234 l
31.5498 -164.000 l
30.0654 -164.000 l
30.0654 -165.016 l
32.7842 -165.016 l
32.7842 -152.219 l
h
f
.647059 .686275 .803922 RG
newpath
12.0000 0.00000 m
12.0000 6.62742 6.62742 12.0000 0.00000 12.0000  c
-6.62742 12.0000 -12.0000 6.62742 -12.0000 0.00000  c
-12.0000 -6.62742 -6.62742 -12.0000 0.00000 -12.0000  c
6.62742 -12.0000 12.0000 -6.62742 12.0000 0.00000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
12.0000 0.00000 m
12.0000 6.62742 6.62742 12.0000 0.00000 12.0000  c
-6.62742 12.0000 -12.0000 6.62742 -12.0000 0.00000  c
-12.0000 -6.62742 -6.62742 -12.0000 0.00000 -12.0000  c
6.62742 -12.0000 12.0000 -6.62742 12.0000 0.00000  c
h
S
newpath
8.00000 0.00000 m
8.00000 4.41828 4.41828 8.00000 0.00000 8.00000  c
-4.41828 8.00000 -8.00000 4.41828 -8.00000 0.00000  c
-8.00000 -4.41828 -4.41828 -8.00000 0.00000 -8.00000  c
4.41828 -8.00000 8.00000 -4.41828 8.00000 0.00000  c
h
S
1 J
2 j
newpath
-5.81378 -11.6276 m
-63.5279 -127.056 l
-66.5093 -133.019 -64.6667 -136.000 -58.0000 -136.000  c
58.0000 -136.000 l
64.6667 -136.000 66.5093 -133.019 63.5279 -127.056  c
5.81378 -11.6276 l
S
newpath
7.81858 -21.4245 m
5.81378 -11.6276 l
12.4485 -19.1096 l
S
2 J
0 j
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix

%%Trailer
%%EOF
